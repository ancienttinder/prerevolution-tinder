plugins {
    id 'java'
}

group 'ru.digitalleague'

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.flywaydb.flyway'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.apache.commons:commons-lang3:3.0'
    compile 'org.flywaydb:flyway-core:6.5.7'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def dbDataDriver = ''
def dbDataUrl = ''
def dbDataUser = ''
def dbDataPassword = ''
def dbDataLocation = ''

def env = 'dev'

if (env == 'dev') {
    file("src/main/resources/flyway.properties").withReader {
        Properties flywayProp = new Properties()
        flywayProp.load(it)
        dbDataDriver = "${flywayProp.driver}"
        dbDataUrl = "${flywayProp.url}"
        dbDataUser = "${flywayProp.user}"
        dbDataPassword = "${flywayProp.password}"
        dbDataLocation = "${flywayProp.locations}"
    }
} else {
    dbDataDriver = 'org.postgresql.Driver'
    dbDataUrl = project.hasProperty('dbDataUrl') ? project.getProperty('dbDataUrl') : ''
    dbDataUser = project.hasProperty('dbDataUser') ? project.getProperty('dbDataUser') : ''
    dbDataPassword = project.hasProperty('dbDataPassword') ? project.getProperty('dbDataPassword') : ''
    dbDataPassword = project.hasProperty('dbDataLocation') ? project.getProperty('dbDataLocation') : ''
}

flyway {
    locations = [dbDataLocation]
    driver = dbDataDriver
    url = dbDataUrl
    user = dbDataUser
    password = dbDataPassword
}